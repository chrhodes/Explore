<Window 
    WindowStartupLocation="CenterScreen"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:local="clr-namespace:XAMLPowerToys.UI"
    x:Class="CreateViewModelWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Create ViewModel" Height="727" Width="760">
    <StackPanel>
        <StackPanel.Resources>

            <CollectionViewSource x:Key="cvsProperties" Source="{Binding Path=ClassEntity.PropertyInfomation}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <Style TargetType="{x:Type TextBlock}" >
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

            <Style x:Key="alternatingWithTriggers" TargetType="{x:Type ListBoxItem}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="WhiteSmoke"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </StackPanel.Resources>

        <TabControl x:Name="tcPropertyGeneration">
            <TabItem Header="Step 1 (required)">
                <StackPanel>
                    <TextBlock Margin="7" Text="Configure how the Model will be exposed on the ViewModel" />
                    <StackPanel Margin="7" Orientation="Horizontal">
                        <TextBlock FontSize="14"  Text="Data Class"/>
                        <TextBlock Margin="7,0,0,0" FontSize="14"  FontWeight="Bold" Text="{Binding Path=TypeName}"/>
                    </StackPanel>

                    <StackPanel Margin="3.5"  Orientation="Horizontal">
                        <TextBlock Foreground="Blue" Text="{Binding Path=PropertySignature}" />
                        <TextBox Margin="7,0" Width="200" Text="{Binding Path=PropertyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Foreground="Blue" Text="As" />
                        <Grid Margin="7,0">
                            <ComboBox
                        Width="317"
                        Focusable="False"
                        x:Name="cboPropertyType"
                        Loaded="cboPropertyType_Loaded"
                        MaxWidth="317"/>
                            <TextBox Foreground="Blue" Margin="0,0,17,0" Text="{Binding Path=PropertyType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="300" />
                        </Grid>
                    </StackPanel>

                    <TextBlock Foreground="Blue" Margin="10.5,3.5" Text="Get" />

                    <StackPanel Orientation="Horizontal" Margin="17.5,3.5">
                        <TextBlock Foreground="Blue" Text="Return" />
                        <TextBox Margin="7,0" Width="200" Text="{Binding Path=FieldName, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <TextBlock Foreground="Blue" Margin="10.5,3.5" Text="End Get" />

                    <StackPanel Margin="10.5,3.5" Orientation="Horizontal">
                        <TextBlock Foreground="Blue" Text="Private" Visibility="{Binding Path=HasPrivateSetter, Converter={StaticResource booleanToVisibilityConverter}}" Margin="0,0,7,0" />
                        <TextBlock Foreground="Blue" Text="Set(ByVal " />
                        <TextBlock Text="Value " />
                        <TextBlock Foreground="Blue" Text="As" />
                        <TextBlock Foreground="Blue" Margin="7,0,0,0" Text="{Binding Path=PropertyType}" />
                        <TextBlock Text=")" />
                    </StackPanel>

                    <StackPanel Margin="17.5,3.5" Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=FieldName}" />
                        <TextBlock Margin="7,0"  Text="= Value" />
                    </StackPanel>

                    <StackPanel Visibility="{Binding Path=IncludeOnPropertyChanged, Converter={StaticResource booleanToVisibilityConverter}}" Margin="17.5,3.5" Orientation="Horizontal">
                        <Grid Margin="0,0,7,0">
                            <ComboBox
                                Focusable="False"
                                IsSynchronizedWithCurrentItem="True"
                                x:Name="cboPropertyChangedMethodNames"
                                Loaded="cboPropertyChangedMethodNames_Loaded"
                                MaxWidth="170">
                            </ComboBox>
                            <TextBox Margin="0,0,17,0" Text="{Binding Path=OnPropertyChangedMethodName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="150" HorizontalAlignment="Left" />
                        </Grid>
                        <TextBlock Text="(" />
                        <TextBlock Foreground="Maroon" Text="&quot;" />
                        <TextBlock Foreground="Maroon" Text="{Binding Path=PropertyName}" />
                        <TextBlock Foreground="Maroon" Text="&quot;" />
                        <TextBlock Text=")" />
                    </StackPanel>

                    <TextBlock Foreground="Blue" Margin="10.5,3.5" Text="End Set" />

                    <TextBlock Foreground="Blue" Margin="3.5" Text="End Property" />

                    <GroupBox Margin="7">
                        <GroupBox.Header>
                            <TextBlock Text="Options" FontWeight="Bold" />
                        </GroupBox.Header>
                        <StackPanel>
                            <CheckBox Margin="3.5"  Content="Is Property Public" IsChecked="{Binding Path=IsPropertyPublic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"  Content="Is Property ReadOnly" IsChecked="{Binding Path=IsPropertyReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"  Content="Is Setter Private" IsChecked="{Binding Path=HasPrivateSetter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"  Content="Include Property Changed Notification" IsChecked="{Binding Path=IncludeOnPropertyChanged, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"  Content="Implement INotifyPropertyChanged and Provide OnPropertyChanged EventHandler" IsChecked="{Binding Path=IncludeOnPropertyChangedEventHandler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </GroupBox>

                </StackPanel>
            </TabItem>
            <TabItem Header="Step 2 (optional)" >
                <StackPanel>
                    <TextBlock Margin="7" Text="Selecting one or more fields will expose them individually on the ViewModel." TextWrapping="Wrap" />
                    <TextBlock Margin="7" Text="Note: The below ListBox uses Extended selection mode making it very easy to multi-select. (CTRL + click and SHIFT + click)" TextWrapping="Wrap" />
                    <StackPanel Margin="7" Orientation="Horizontal">
                        <TextBlock FontSize="14"  Text="Data Class"/>
                        <TextBlock Margin="7,0,0,0" FontSize="14"  FontWeight="Bold" Text="{Binding Path=TypeName}"/>
                    </StackPanel>
                    <local:CheckListBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="275" Margin="7" FontSize="12" ClipToBounds="True" Background="#FFFFFFFF" BorderBrush="#FF000000" BorderThickness="1" Padding="5" CheckBrushStrokeThickness="1" >
                        <ListBox AlternationCount="2" x:Name="lbProperteis" Width="Auto" Height="Auto" ItemsSource="{Binding Source={StaticResource cvsProperties}}" FontSize="12" SelectionMode="Extended">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="WhiteSmoke"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="3.5,2" Text="{Binding Path=FullName}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </local:CheckListBox>

                    <GroupBox Margin="7" Visibility="{Binding Path=IsVB, Converter={StaticResource booleanToVisibilityConverter}}">
                        <GroupBox.Header>
                            <TextBlock Text="Options" FontWeight="Bold" />
                        </GroupBox.Header>
                        <StackPanel>
                            <CheckBox Margin="3.5"  Content="Use Hungarian Notation for Private Backing Fields" IsChecked="{Binding Path=UseHungarianNotationForPrivateFields, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
        </TabControl>

        <GroupBox Margin="7" Height="150">
            <GroupBox.Header>
                <TextBlock Text="Commands" FontWeight="Bold" />
            </GroupBox.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button Click="btnAddCommand_Click" HorizontalAlignment="Right" Content="Add Command" />
                <ListBox Grid.Row="1" ItemsSource="{Binding Path=CommandsCollection}" AlternationCount="1" ItemContainerStyle="{StaticResource alternatingWithTriggers}" Background="White" />
            </Grid>
        </GroupBox>

        <StackPanel HorizontalAlignment="Right" Margin="7" Orientation="Horizontal">
            <Button Command="{Binding Path=CreateCommand}" Content="Create" Padding="3.5" />
            <Button Click="btnCancel_Click"  Margin="7,0" Content="Cancel" Padding="3.5" />
        </StackPanel>
    </StackPanel>
</Window>
