//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WiredBrainCoffee.CustomerApp.UI.SendShirtServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SendShirtServiceReference.ISendShirtService")]
    public interface ISendShirtService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISendShirtService/SendShirtToCustomer")]
        void SendShirtToCustomer(int id, string fullName, string colorCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISendShirtService/SendShirtToCustomer")]
        System.Threading.Tasks.Task SendShirtToCustomerAsync(int id, string fullName, string colorCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISendShirtServiceChannel : WiredBrainCoffee.CustomerApp.UI.SendShirtServiceReference.ISendShirtService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendShirtServiceClient : System.ServiceModel.ClientBase<WiredBrainCoffee.CustomerApp.UI.SendShirtServiceReference.ISendShirtService>, WiredBrainCoffee.CustomerApp.UI.SendShirtServiceReference.ISendShirtService {
        
        public SendShirtServiceClient() {
        }
        
        public SendShirtServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SendShirtServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendShirtServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SendShirtServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendShirtToCustomer(int id, string fullName, string colorCode) {
            base.Channel.SendShirtToCustomer(id, fullName, colorCode);
        }
        
        public System.Threading.Tasks.Task SendShirtToCustomerAsync(int id, string fullName, string colorCode) {
            return base.Channel.SendShirtToCustomerAsync(id, fullName, colorCode);
        }
    }
}
